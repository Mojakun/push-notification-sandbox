import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import { useState } from "react";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const [result, setResult] = useState<string>("0");
  const [firstNum, setFirstNum] = useState<string>("");
  const [operator, setOperator] = useState<string>("");

  const handleNumClick = (e: React.MouseEvent<HTMLButtonElement>) => {
    const num: string = e.currentTarget.value;
    if (result === "0") {
      setResult(num);
    } else {
      setResult(result + num);
    }
  };

  const handleOperatorClick = (e: React.MouseEvent<HTMLButtonElement>) => {
    const op: string = e.currentTarget.value;
    setFirstNum(result);
    setResult("0");
    setOperator(op);
  };

  const handleClearClick = () => {
    setResult("0");
    setFirstNum("");
    setOperator("");
  };

  const handleEqualClick = () => {
    const secondNum: string = result;
    let res: string = "";
    switch (operator) {
      case "+":
        res = (Number(firstNum) + Number(secondNum)).toString();
        break;
      case "-":
        res = (Number(firstNum) - Number(secondNum)).toString();
        break;
      case "*":
        res = (Number(firstNum) * Number(secondNum)).toString();
        break;
      case "/":
        res = (Number(firstNum) / Number(secondNum)).toString();
        break;
      default:
        res = "0";
        break;
    }
    setResult(res);
    setFirstNum("");
    setOperator("");
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className="calculator">
          <div className="display">{result}</div>
          <div className="button-row">
            <button
              className="number-button"
              onClick={handleNumClick}
              value="1"
            >
              1
            </button>
            <button
              className="number-button"
              onClick={handleNumClick}
              value="2"
            >
              2
            </button>
            <button
              className="number-button"
              onClick={handleNumClick}
              value="3"
            >
              3
            </button>
            <button
              className="operator-button"
              onClick={handleOperatorClick}
              value="+"
            >
              +
            </button>
          </div>
          <div className="button-row">
            <button
              className="number-button"
              onClick={handleNumClick}
              value="4"
            >
              4
            </button>
            <button
              className="number-button"
              onClick={handleNumClick}
              value="5"
            >
              5
            </button>
            <button
              className="number-button"
              onClick={handleNumClick}
              value="6"
            >
              6
            </button>
            <button
              className="operator-button"
              onClick={handleOperatorClick}
              value="-"
            >
              -
            </button>
          </div>
          <div className="button-row">
            <button
              className="number-button"
              onClick={handleNumClick}
              value="7"
            >
              7
            </button>
            <button
              className="number-button"
              onClick={handleNumClick}
              value="8"
            >
              8
            </button>
            <button
              className="number-button"
              onClick={handleNumClick}
              value="9"
            >
              9
            </button>
            <button
              className="operator-button"
              onClick={handleOperatorClick}
              value="*"
            >
              *
            </button>
          </div>
          <div className="button-row">
            <button className="clear-button" onClick={handleClearClick}>
              Clear
            </button>
            <button
              className="number-button"
              onClick={handleNumClick}
              value="0"
            >
              0
            </button>
            <button className="equal-button" onClick={handleEqualClick}>
              =
            </button>
            <button
              className="operator-button"
              onClick={handleOperatorClick}
              value="/"
            >
              /
            </button>
          </div>
        </div>
      </main>
    </>
  );
}
